@misc{ericsson-mobility-report,
	title={Ericsson mobility report},
	author={Jonsson, Peter and Carson, Stephen and Lindberg, Per and Öhman, Kati and Sorlie,
	Ida and Queirós, Ricardo and Muller, Frank and Englund, Lisa and Arvedson, Mats and
	Carlsson, Anders},
	url={https://www.ericsson.com/assets/local/mobility-report/documents/2018/ericsson-mobility-report-november-2018.pdf},
	year={2018},
	month=nov
}

@misc{hern_2017, 
	title={Hacking risk leads to recall of 500,000 pacemakers due to patient death fears}, 
	url={https://www.theguardian.com/technology/2017/aug/31/hacking-risk-recall-pacemakers-patient-death-fears-fda-firmware-update}, 
	journal={The Guardian}, 
	publisher={Guardian News and Media}, 
	author={Hern, Alex}, 
	year={2017}, 
	month=aug,
	urldate={2019-01-16}
}

@misc{perlroth_2016, 
	title={Hackers Used New Weapons to Disrupt Major Websites Across U.S.}, 
	url={https://www.nytimes.com/2016/10/22/business/internet-problems-attack.html}, 
	journal={The New York Times}, 
	publisher={The New York Times Company}, 
	author={Perlroth, Nicole}, 
	year={2016}, 
	month=oct,
	urldate={2019-01-16}
}

@misc{ali_bosche_ford_2018, 
	title={Cybersecurity Is the Key to Unlocking Demand in the Internet of Things}, 
	url={https://www.bain.com/insights/cybersecurity-is-the-key-to-unlocking-demand-in-the-internet-of-things/}, 
	journal={Bain Brief - Bain & Company}, 
	author={Ali, Syed and Bosche, Ann and Ford, Frank}, 
	year={2018}, 
	month=oct,
	urldate={2018-12-10}
}

@misc{suit, 
	title={Software Updates for Internet of Things (suit)}, 
	url={https://datatracker.ietf.org/wg/suit/about/}, 
	journal={Software Updates for Internet of Things (suit) },
	urldate={2019-01-16}
}

@misc{rfc7228,
	series =	{Request for Comments},
	number =	7228,
	howpublished =	{RFC 7228},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC7228},
	url =		{https://rfc-editor.org/rfc/rfc7228.txt},
	author =	{Carsten Bormann and Mehmet Ersue and Ari Keränen},
	title =		{{Terminology for Constrained-Node Networks}},
	pagetotal =	17,
	year =		2014,
	month =		may,
	abstract =	{The Internet Protocol Suite is increasingly used on small devices with severe constraints on power, memory, and processing resources, creating constrained-node networks. This document provides a number of basic terms that have been useful in the standardization work for constrained-node networks.},
}

@misc{rfc768,
	series =	{Request for Comments},
	number =	768,
	howpublished =	{RFC 768},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0768},
	url =		{https://rfc-editor.org/rfc/rfc768.txt},
	author =	{Jon Postel},
	title =		{{User Datagram Protocol}},
	pagetotal =	3,
	year =		1980,
	month =		aug,
	abstract =	{},
}

@misc{rfc6347,
	series =	{Request for Comments},
	number =	6347,
	howpublished =	{RFC 6347},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC6347},
	url =		{https://rfc-editor.org/rfc/rfc6347.txt},
	author =	{Eric Rescorla and Nagendra Modadugu},
	title =		{{Datagram Transport Layer Security Version 1.2}},
	pagetotal =	32,
	year =		2012,
	month =		jan,
	abstract =	{This document specifies version 1.2 of the Datagram Transport Layer Security (DTLS) protocol. The DTLS protocol provides communications privacy for datagram protocols. The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. The DTLS protocol is based on the Transport Layer Security (TLS) protocol and provides equivalent security guarantees. Datagram semantics of the underlying transport are preserved by the DTLS protocol. This document updates DTLS 1.0 to work with TLS version 1.2. {[}STANDARDS-TRACK{]}},
}

@misc{rfc5246,
	series =	{Request for Comments},
	number =	5246,
	howpublished =	{RFC 5246},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC5246},
	url =		{https://rfc-editor.org/rfc/rfc5246.txt},
	author =	{Eric Rescorla and Tim Dierks},
	title =		{{The Transport Layer Security (TLS) Protocol Version 1.2}},
	pagetotal =	104,
	year =		2008,
	month =		aug,
	abstract =	{This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol. The TLS protocol provides communications security over the Internet. The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. {[}STANDARDS-TRACK{]}},
}

@misc{rfc7252,
	series =	{Request for Comments},
	number =	7252,
	howpublished =	{RFC 7252},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC7252},
	url =		{https://rfc-editor.org/rfc/rfc7252.txt},
	author =	{Zach Shelby and Klaus Hartke and Carsten Bormann},
	title =		{{The Constrained Application Protocol (CoAP)}},
	pagetotal =	112,
	year =		2014,
	month =		jun,
	abstract =	{The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation. CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.},
}

@misc{rfc7959,
	series =	{Request for Comments},
	number =	7959,
	howpublished =	{RFC 7959},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC7959},
	url =		{https://rfc-editor.org/rfc/rfc7959.txt},
	author =	{Carsten Bormann and Zach Shelby},
	title =		{{Block-Wise Transfers in the Constrained Application Protocol (CoAP)}},
	pagetotal =	37,
	year =		2016,
	month =		aug,
	abstract =	{The Constrained Application Protocol (CoAP) is a RESTful transfer protocol for constrained nodes and networks. Basic CoAP messages work well for small payloads from sensors and actuators; however, applications will need to transfer larger payloads occasionally -- for instance, for firmware updates. In contrast to HTTP, where TCP does the grunt work of segmenting and resequencing, CoAP is based on datagram transports such as UDP or Datagram Transport Layer Security (DTLS). These transports only offer fragmentation, which is even more problematic in constrained nodes and networks, limiting the maximum size of resource representations that can practically be transferred. Instead of relying on IP fragmentation, this specification extends basic CoAP with a pair of "Block" options for transferring multiple blocks of information from a resource representation in multiple request-response pairs. In many important cases, the Block options enable a server to be truly stateless: the server can handle each block transfer separately, with no need for a connection setup or other server-side memory of previous block transfers. Essentially, the Block options provide a minimal way to transfer larger representations in a block-wise fashion. A CoAP implementation that does not support these options generally is limited in the size of the representations that can be exchanged, so there is an expectation that the Block options will be widely used in CoAP implementations. Therefore, this specification updates RFC 7252.},
}

@book{rest,
	title={Architectural styles and the design of network-based software architectures},
	author={Fielding, Roy T and Taylor, Richard N},
	volume={7},
	year={2000},
	publisher={University of California, Irvine Irvine, USA}
}

@techreport{suit-architecture,
	number =	{draft-ietf-suit-architecture-02},
	type =		{Internet-Draft},
	institution =	{Internet Engineering Task Force},
	publisher =	{Internet Engineering Task Force},
	note =		{Work in Progress},
	url =		{https://datatracker.ietf.org/doc/html/draft-ietf-suit-architecture-02},
	author =	{Brendan Moran and Milosch Meriac and Hannes Tschofenig and David Brown},
	title =		{{A Firmware Update Architecture for Internet of Things Devices}},
	pagetotal =	22,
	year =		2019,
	month =		jan,
	day =		16,
	abstract =	{Vulnerabilities with Internet of Things (IoT) devices have raised the need for a solid and secure firmware update mechanism that is also suitable for constrained devices. Incorporating such update mechanism to fix vulnerabilities, to update configuration settings as well as adding new functionality is recommended by security experts. This document lists requirements and describes an architecture for a firmware update mechanism suitable for IoT devices. The architecture is agnostic to the transport of the firmware images and associated meta-data. This version of the document assumes asymmetric cryptography and a public key infrastructure. Future versions may also describe a symmetric key approach for very constrained devices.},
}

@techreport{suit-information-model,
	number =	{draft-ietf-suit-information-model-02},
	type =		{Internet-Draft},
	institution =	{Internet Engineering Task Force},
	publisher =	{Internet Engineering Task Force},
	note =		{Work in Progress},
	url =		{https://datatracker.ietf.org/doc/html/draft-ietf-suit-information-model-02},
	author =	{Brendan Moran and Hannes Tschofenig and Henk Birkholz},
	title =		{{Firmware Updates for Internet of Things Devices - An Information Model for Manifests}},
	pagetotal =	32,
	year =		2019,
	month =		jan,
	day =		18,
	abstract =	{Vulnerabilities with Internet of Things (IoT) devices have raised the need for a solid and secure firmware update mechanism that is also suitable for constrained devices. Incorporating such update mechanism to fix vulnerabilities, to update configuration settings as well as adding new functionality is recommended by security experts. One component of such a firmware update is the meta-data, or manifest, that describes the firmware image(s) and offers appropriate protection. This document describes all the information that must be present in the manifest.},
}

@misc{stride, 
	title={The STRIDE Threat Model}, 
	url={https://docs.microsoft.com/en-us/previous-versions/commerce-server/ee823878(v=cs.20)}, 
	journal={Microsoft Docs}, 
	author={Microsoft}, 
	year={2009}, 
	month=nov,
	urldate={2019-01-17}
}

@misc{contiki-ng-github,
	author = {contiki-ng},
	title = {Contiki-NG},
	year = {2019},
	publisher = {GitHub},
	journal = {GitHub repository},
	url={https://github.com/contiki-ng/contiki-ng},
	commit = {9ac015013e709afb889c4e5d23c8f596499778ad},
	urldate={2019-01-18}
}

@misc{contiki-github,
	author = {contiki-os},
	title = {Contiki},
	year = {2018},
	publisher = {GitHub},
	journal = {GitHub repository},
	url={https://github.com/contiki-os/contiki},
	commit = {32b5b17f674232867c22916bb2e2534c8e9a92ff},
	urldate={2019-01-18}
}

@inproceedings{protothreads,
	author = {Dunkels, Adam and Schmidt, Oliver and Voigt, Thiemo and Ali, Muneeb},
	title = {Protothreads: Simplifying Event-driven Programming of Memory-constrained Embedded Systems},
	booktitle = {Proceedings of the 4th International Conference on Embedded Networked Sensor Systems},
	series = {SenSys '06},
	year = {2006},
	isbn = {1-59593-343-3},
	location = {Boulder, Colorado, USA},
	pages = {29--42},
	numpages = {14},
	url = {http://doi.acm.org/10.1145/1182807.1182811},
	doi = {10.1145/1182807.1182811},
	acmid = {1182811},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {embedded systems, threads, wireless sensor networks},
}

@misc{contiki-multithreading,
	author={contiki-os},
	title={Multithreading},
	year={2014},
	publisher={GitHub},
	journal={GitHub repository},
	url={https://github.com/contiki-os/contiki/wiki/Multithreading},
	commit={e928103bffe1549b740d9a838831f8fd255604a9},
	urldate={2019-01-23}
}

@ARTICLE{ieee-802.15.4,
	author={},
	journal={IEEE Std 802.15.4-2003},
	title={IEEE Standard for Information Technology - Telecommunications and Information Exchange Between Systems - Local and Metropolitan Area Networks Specific Requirements Part 15.4: Wireless Medium Access Control (MAC) and Physical Layer (PHY) Specifications for Low-Rate Wireless Personal Area Networks (LR-WPANs)},
	year={2003},
	volume={},
	number={},
	keywords={},
	doi={10.1109/IEEESTD.2003.94389},
	ISSN={},
	month={},
}

@INPROCEEDINGS{low-power-coap,
	author={M. Kovatsch and S. Duquennoy and A. Dunkels},
	booktitle={2011 IEEE Eighth International Conference on Mobile Ad-Hoc and Sensor Systems},
	title={A Low-Power CoAP for Contiki},
	year={2011},
	volume={},
	number={},
	pages={855-860},
	keywords={operating systems (computers);power aware computing;Web services;Internet of things;low-power CoAP;low-power wireless systems;power-efficiency;IETF constrained application protocol;Contiki operating system;radio duty cycling mechanism;Engines;Protocols;Payloads;Servers;Random access memory;Energy consumption;IP networks;Internet of Things;Web of Things;CoAP;embedded Web services;energy;radio duty cycling},
	doi={10.1109/MASS.2011.100},
	ISSN={2155-6814},
	month=oct,
}

@misc{erbium, 
	title={Erbium (Er) REST Engine - C CoAP implementation}, 
	url={https://web.archive.org/web/20130716001010/http://people.inf.ethz.ch/mkovatsc/erbium.php}, 
	journal={}, 
	author={Matthias Kovatsch}, 
	year={2012}, 
	month=dec,
	urldate={2019-01-18}
}

@misc{erbium-github,
	author = {Matthias Kovatsch},
	title = {SmartAppContiki},
	year = {2012},
	publisher = {GitHub},
	journal = {GitHub repository},
	url={https://github.com/mkovatsc/SmartAppContiki},
	commit = {3da616c31edcefdd81fdea1d13e468258fe3e7c8},
	urldate={2019-01-18}
}

@misc{tinydtls-github,
	author = {contiki-ng},
	title = {TinyDTLS},
	year = {2018},
	publisher = {GitHub},
	journal = {GitHub repository},
	url={https://github.com/contiki-ng/tinydtls},
	commit = {53a0d97da748a67093c49cb38744650c71d58c4d},
	urldate={2019-01-18}
}

@misc{contiki-coap,
	author={contiki-ng},
	title={Documentation: CoAP},
	year={2018},
	publisher={GitHub},
	journal={GitHub repository},
	url={https://github.com/contiki-ng/contiki-ng/wiki/Documentation:-CoAP},
	commit={8da1227a9040582274bca0f081889d65fb9777bd},
	urldate={2019-01-23}
}

@techreport{est-coaps,
	number =	{draft-ietf-ace-coap-est-07},
	type =		{Internet-Draft},
	institution =	{Internet Engineering Task Force},
	publisher =	{Internet Engineering Task Force},
	note =		{Work in Progress},
	url =		{https://datatracker.ietf.org/doc/html/draft-ietf-ace-coap-est-07},
	author =	{Peter Van der Stok and Panos Kampanakis and Michael Richardson and Shahid Raza},
	title =		{{EST over secure CoAP (EST-coaps)}},
	pagetotal =	46,
	year =		2019,
	month =		jan,
	day =		9,
	abstract =	{Enrollment over Secure Transport (EST) is used as a certificate provisioning protocol over HTTPS. Low-resource devices often use the lightweight Constrained Application Protocol (CoAP) for message exchanges. This document defines how to transport EST payloads over secure CoAP (EST-coaps), which allows constrained devices to use existing EST functionality for provisioning certificates.},
}

@misc{rfc7030,
	series =	{Request for Comments},
	number =	7030,
	howpublished =	{RFC 7030},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC7030},
	url =		{https://rfc-editor.org/rfc/rfc7030.txt},
	author =	{Max Pritikin and Peter E. Yee and Dan Harkins},
	title =		{{Enrollment over Secure Transport}},
	pagetotal =	53,
	year =		2013,
	month =		oct,
	abstract =	{This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.},
}

@techreport{sha256,
	title={Secure hash standard},
	author={Dang, Quynh H},
	year={2015}
}

@manual{firefly-datasheet,
	organization={Zolertia},
	title={Zolertia Firefly Revision A2 Internet of Things hardware development platform,
	for 2.4-GHz and 863-950MHz IEEE 802.15.4, 6LoWPAN and ZigBee® Applications},
	number="ZOL-BO001-A2",
	year="2017",
	month=dec,
	note="Revision A2"
}

@book{interconnecting,
  title={Interconnecting smart objects with ip: The next internet},
  author={Vasseur, Jean-Philippe and Dunkels, Adam},
  year={2010},
  publisher={Morgan Kaufmann}
}

@misc{rfc7049,
	series =	{Request for Comments},
	number =	7049,
	howpublished =	{RFC 7049},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC7049},
	url =		{https://rfc-editor.org/rfc/rfc7049.txt},
    author =	{Carsten Bormann and Paul E. Hoffman},
	title =		{{Concise Binary Object Representation (CBOR)}},
	pagetotal =	54,
	year =		2013,
	month =		oct,
	abstract =	{The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.},
}
